"""empty message

Revision ID: 893af09103e5
Revises: 
Create Date: 2023-02-01 16:34:13.537340

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '893af09103e5'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inspection_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=40), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('type')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('firstName', sa.String(length=255), nullable=False),
    sa.Column('lastName', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('firstAddressLine', sa.String(length=80), nullable=False),
    sa.Column('secondAddressLine', sa.String(length=80), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('zipCode', sa.String(), nullable=False),
    sa.Column('ownerName', sa.String(), nullable=True),
    sa.Column('ownerPhone', sa.String(), nullable=True),
    sa.Column('ownerEmail', sa.String(), nullable=True),
    sa.Column('ownerFirstAddressLine', sa.String(length=80), nullable=True),
    sa.Column('ownerSecondAddressLine', sa.String(length=80), nullable=True),
    sa.Column('ownerCity', sa.String(), nullable=True),
    sa.Column('ownerState', sa.String(), nullable=True),
    sa.Column('ownerZipCode', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('nextInspectionDate', sa.String(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lng', sa.Float(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('question_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category', sa.String(length=255), nullable=False),
    sa.Column('inspection_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inspection_type_id'], ['inspection_types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address-images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('url', sa.Text(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['addressId'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inspections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inspectionNumber', sa.Integer(), nullable=False),
    sa.Column('passing', sa.Boolean(), server_default='true', nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('date', sa.String(), nullable=False),
    sa.Column('addressId', sa.Integer(), nullable=False),
    sa.Column('inspectionTypeId', sa.Integer(), nullable=False),
    sa.Column('inspectorId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['addressId'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['inspectionTypeId'], ['inspection_types.id'], ),
    sa.ForeignKeyConstraint(['inspectorId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('questions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sa.Text(), nullable=False),
    sa.Column('question_category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['question_category_id'], ['question_categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inspection_answers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('passing', sa.Boolean(), server_default='true', nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('inspectionId', sa.Integer(), nullable=False),
    sa.Column('questionId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['inspectionId'], ['inspections.id'], ),
    sa.ForeignKeyConstraint(['questionId'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inspection_answers')
    op.drop_table('questions')
    op.drop_table('inspections')
    op.drop_table('address-images')
    op.drop_table('question_categories')
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('inspection_types')
    # ### end Alembic commands ###